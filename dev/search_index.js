var documenterSearchIndex = {"docs":
[{"location":"#NFLTables-Documentation","page":"NFLTables Documentation","title":"NFLTables Documentation","text":"","category":"section"},{"location":"","page":"NFLTables Documentation","title":"NFLTables Documentation","text":"CurrentModule = NFLTables","category":"page"},{"location":"#Enumerations","page":"NFLTables Documentation","title":"Enumerations","text":"","category":"section"},{"location":"","page":"NFLTables Documentation","title":"NFLTables Documentation","text":"SeasonPart\nparse(::Type{SeasonPart}, str::AbstractString)\nSuperBowl","category":"page"},{"location":"#NFLTables.SeasonPart","page":"NFLTables Documentation","title":"NFLTables.SeasonPart","text":"Parts of a single season\n\nExamples\n\njulia> PRE\nPRE::SeasonPart = 0\n\njulia> REG\nREG::SeasonPart = 1\n\njulia> POST\nPOST::SeasonPart = 2\n\n\n\n\n\n","category":"type"},{"location":"#Base.parse-Tuple{Type{SeasonPart}, AbstractString}","page":"NFLTables Documentation","title":"Base.parse","text":"parse(::Type{SeasonPart}, str::AbstractString)\n\nParse str as a part of a season.\n\nExamples\n\njulia> parse(SeasonPart, \"PRE\")\nPRE::SeasonPart = 0\n\njulia> parse(SeasonPart, \"REG\")\nREG::SeasonPart = 1\n\njulia> parse(SeasonPart, \"POST\")\nPOST::SeasonPart = 2\n\n\n\n\n\n","category":"method"},{"location":"#NFLTables.SuperBowl","page":"NFLTables Documentation","title":"NFLTables.SuperBowl","text":"An enumeration of the SuperBowls as stylized/marketed (with the season as the value)\n\nExamples\n\njulia> SuperBowl(2001)\nSB_XXXVI::SuperBowl = 2001\n\njulia> SuperBowl(2015)\nSB_50::SuperBowl = 2015\n\n\n\n\n\n\n","category":"type"},{"location":"#NFL-Schedule-Data","page":"NFLTables Documentation","title":"NFL Schedule Data","text":"","category":"section"},{"location":"","page":"NFLTables Documentation","title":"NFLTables Documentation","text":"Schedules.schedule","category":"page"},{"location":"#NFLTables.Schedules.schedule","page":"NFLTables Documentation","title":"NFLTables.Schedules.schedule","text":"schedule(season::Integer)\n\nObtain the NFL schedule for season\n\nExamples\n\njulia> df = Schedules.schedule(2018);\n\njulia> show(first(df[:, [:date, :home, :away, :homescore, :awayscore]], 5), eltypes=false)\n5×5 DataFrame\n Row │ date        home  away  homescore  awayscore\n─────┼──────────────────────────────────────────────\n   1 │ 2018-08-02  BAL   CHI          17         16\n   2 │ 2018-08-09  BAL   LAR          33          7\n   3 │ 2018-08-09  BUF   CAR          23         28\n   4 │ 2018-08-09  CIN   CHI          30         27\n   5 │ 2018-08-09  GB    TEN          31         17\n\n\n\n\n\n\n","category":"function"},{"location":"#nflscrapR-Data","page":"NFLTables Documentation","title":"nflscrapR Data","text":"","category":"section"},{"location":"","page":"NFLTables Documentation","title":"NFLTables Documentation","text":"NFLScrapR.getplaydata\nNFLScrapR.getgamedata","category":"page"},{"location":"#NFLTables.NFLScrapR.getplaydata","page":"NFLTables Documentation","title":"NFLTables.NFLScrapR.getplaydata","text":"getplaydata(season, part)\n\nCreate a dataframe of play-by-play data for part of season.\n\nExamples\n\njulia> df = NFLScrapR.getplaydata(2019, \"POST\");\n\njulia> show(first(df[:, [:game_id, :home_team, :away_team, :yardline_100, :half_seconds_remaining]], 5), eltypes=false)\n5×5 DataFrame\n Row │ game_id     home_team  away_team  yardline_100  half_seconds_remaining\n─────┼────────────────────────────────────────────────────────────────────────\n   1 │ 2020012600  APR        NPR                  75                    1800\n   2 │ 2020012600  APR        NPR                  75                    1776\n   3 │ 2020012600  APR        NPR                  80                    1757\n   4 │ 2020012600  APR        NPR                  71                    1715\n   5 │ 2020012600  APR        NPR                  71                    1709\n\n\n\n\n\n\n","category":"function"},{"location":"#NFLTables.NFLScrapR.getgamedata","page":"NFLTables Documentation","title":"NFLTables.NFLScrapR.getgamedata","text":"getgamedata(season, part)\n\nCreate a dataframe of game data for part of season.\n\nExamples\n\njulia> df = NFLScrapR.getgamedata(2019, \"POST\");\n\njulia> show(first(df[:, [:game_id, :home_team, :away_team, :home_score, :away_score]], 5), eltypes=false)\n5×5 DataFrame\n Row │ game_id     home_team  away_team  home_score  away_score\n─────┼──────────────────────────────────────────────────────────\n   1 │ 2020012600  APR        NPR           missing     missing\n   2 │ 2020010400  HOU        BUF                22          19\n   3 │ 2020010401  NE         TEN                13          20\n   4 │ 2020010500  NO         MIN                20          26\n   5 │ 2020010501  PHI        SEA                 9          17\n\n\n\n\n\n\n","category":"function"},{"location":"#nflfastR-Data","page":"NFLTables Documentation","title":"nflfastR Data","text":"","category":"section"},{"location":"","page":"NFLTables Documentation","title":"NFLTables Documentation","text":"NFLFastR.getdata","category":"page"},{"location":"#NFLTables.NFLFastR.getdata","page":"NFLTables Documentation","title":"NFLTables.NFLFastR.getdata","text":"getdata(season::Integer)\ngetdata(label::Symbol)\n\nCreate a dataframe of play-by-play data for season or label data for all seasons`.\n\nExamples\n\njulia> df = NFLFastR.getdata(2010);\n\njulia> show(first(df[:, [:home_team, :away_team, :yardline_100, :half_seconds_remaining]], 5), eltypes=false)\n5×4 DataFrame\n Row │ home_team  away_team  yardline_100  half_seconds_remaining\n─────┼────────────────────────────────────────────────────────────\n   1 │ LA         ARI             missing                    1800\n   2 │ LA         ARI                  30                    1800\n   3 │ LA         ARI                  78                    1795\n   4 │ LA         ARI                  78                    1764\n   5 │ LA         ARI                  73                    1723\n\n\n\n\n\n","category":"function"}]
}
